name: Release-Master

on:
  push:
    branches:
      - master

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Python Dependency Installation
        uses: py-actions/py-dependency-install@v2.0.2

      - name: Run linter
        run: make lint

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Python Dependency Installation
        uses: py-actions/py-dependency-install@v2.0.2

      - name: Run unit tests
        run: make test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Python Dependency Installation
        uses: py-actions/py-dependency-install@v2.0.2

      - name: Read file
        id: version
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: version

      - name: Create distribution package
        run: make dist
        env:
          WDC_VERSION: ${{ steps.version.outputs.content }}.${{ github.run_number }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wdc
          path: dist/

      - name: Create whl package
        run: make whl
        env:
          WDC_VERSION: ${{ steps.version.outputs.content }}.${{ github.run_number }}

      - name: Upload whl artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wdc_whl
          path: dist/

  release-github:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: wdc
          path: artifacts

      - name: Read file
        id: version
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: version

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.content }}.${{ github.run_number }}
          release_name: Release ${{ steps.version.outputs.content }}.${{ github.run_number }}
          body: ""
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/wdc-${{ steps.version.outputs.content }}.${{ github.run_number }}.zip
          asset_name: wdc-${{ steps.version.outputs.content }}.${{ github.run_number }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset-tar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/wdc-${{ steps.version.outputs.content }}.${{ github.run_number }}.tar.gz
          asset_name: wdc-${{ steps.version.outputs.content }}.${{ github.run_number }}.tar.gz
          asset_content_type: application/x-tar

      - name: Upload Release Asset
        id: upload-release-asset-whl
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/wdc-${{ steps.version.outputs.content }}.${{ github.run_number }}-py3-none-any.whl
          asset_name: wdc-${{ steps.version.outputs.content }}.${{ github.run_number }}-py3-none-any.whl
          asset_content_type: application/octet-stream

  release-pypi:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: wdc_whl
          path: dist

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  release-docker:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: wdc_whl
          path: dist

      - name: Read version file
        id: version
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: version

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dejanfajfar/wdc
          tags: latest, ${{ steps.version.outputs.content }}.${{ github.run_number }}
          add_git_labels: true
          build_args: VERSION=${{ steps.version.outputs.content }}.${{ github.run_number }}
          tag_with_ref: true
          tag_with_sha: true

      - name: Push README to docker hub
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dejanfajfar/wdc
          readme: "./README-DOCKER.md"
